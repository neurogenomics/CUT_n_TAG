return(genes)
}) %>% `names<-`(names(annotatePeak_list))
return(gene_lists)
}
# Construct gene list
genes <- extract_gene_lists(setNames(list(peakAnnot), x),
use_seq2gene = .use_seq2gene)#[[1]]
# Construct gene list
genes <- extract_gene_lists(annotatePeak_list[x],
use_seq2gene = .use_seq2gene)#[[1]]
genes
length(genes)
# Construct gene list
genes <- extract_gene_lists(annotatePeak_list[x],
use_seq2gene = .use_seq2gene)[[1]]
genes
length(genes)
.plot <- ReactomePA::dotplot(pathways,
title=paste(x,":\n",
if(.use_seq2gene)"seq2gene +",
"ReactomePA pathway enrichment"))
# Enrich pathway
pathways <- ReactomePA::enrichPathway(genes)
.plot <- ReactomePA::dotplot(pathways,
title=paste(x,":\n",
if(.use_seq2gene)"seq2gene +",
"ReactomePA pathway enrichment"))
.plot
enrich_ReactomePA <- function(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene=F,
show_plot=T){
res <- lapply(names(annotatePeak_list), function(x,
.use_seq2gene=use_seq2gene,
.pvalueCutoff=pvalueCutoff,
.pAdjustMethod=pAdjustMethod){
print(x)
genes <- extract_gene_lists(annotatePeak_list[x],
use_seq2gene = .use_seq2gene)[[1]]
pathways <- ReactomePA::enrichPathway(genes,
pvalueCutoff=.pvalueCutoff,
pAdjustMethod=.pAdjustMethod)
.plot <- ReactomePA::dotplot(pathways,
title=paste(x,":\n",
if(.use_seq2gene)"seq2gene +",
"ReactomePA pathway enrichment"))
if(show_plot) print(.plot)
return(list(pathways=pathways,
dotplot=.plot) )
}) %>% `names<-`(names(annotatePeak_list))
return(res)
}
gene_lists <- extract_gene_lists(annotatePeak_list,
use_seq2gene = use_seq2gene)
gene_lists
fun="enrichKEGG"
pvalueCutoff  = 0.05
pAdjustMethod = "BH"
pathways <- clusterProfiler::compareCluster(geneCluster   = gene_lists,
fun = fun,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
.plot <- clusterProfiler::dotplot(pathways,
showCategory = 15,
title = paste(gsub("^enrich","",fun),"pathway enrichment"))
.plot
.plot <- clusterProfiler::dotplot(pathways,
showCategory = 15,
title = paste(x,"\n",
if(use_seq2gene)"seq2gene +",
gsub("^enrich","",fun),"pathway enrichment"))
.plot
enrich_clusterProfiler <- function(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene=F,
show_plot=T){
gene_lists <- extract_gene_lists(annotatePeak_list,
use_seq2gene = use_seq2gene)
pathways <- clusterProfiler::compareCluster(geneCluster   = gene_lists,
fun = fun,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
.plot <- clusterProfiler::dotplot(pathways,
showCategory = 15,
title = paste(x,"\n",
if(use_seq2gene)"seq2gene +",
gsub("^enrich","",fun),"pathway enrichment"))
if(show_plot)print(.plot)
return(list(pathways=pathways,
dotplot=.plot ) )
}
res_clusterProfiler <- enrich_clusterProfiler(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene = T)
enrich_clusterProfiler <- function(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene=F,
show_plot=T){
gene_lists <- extract_gene_lists(annotatePeak_list,
use_seq2gene = use_seq2gene)
pathways <- clusterProfiler::compareCluster(geneCluster   = gene_lists,
fun = fun,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
.plot <- clusterProfiler::dotplot(pathways,
showCategory = 15,
title = paste(x,"\n",
if(use_seq2gene)"seq2gene +",
gsub("^enrich","",fun),"pathway enrichment"))
if(show_plot)print(.plot)
return(list(pathways=pathways,
dotplot=.plot ) )
}
res_clusterProfiler <- enrich_clusterProfiler(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene = T,
show_plot = T)
extract_gene_lists <- function(annotatePeak_list,
use_seq2gene=F){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
gene_lists <- lapply(names(annotatePeak_list), function(x,
.use_seq2gene=use_seq2gene){
print(x)
if(.use_seq2gene){
genes <- ChIPseeker::seq2gene(annotatePeak_list[[x]]@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
} else{ genes <- annotatePeak_list[[x]]@anno$geneId }
return(genes)
}) %>% `names<-`(names(annotatePeak_list))
return(gene_lists)
}
enrich_clusterProfiler <- function(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene=F,
show_plot=T){
gene_lists <- extract_gene_lists(annotatePeak_list,
use_seq2gene = use_seq2gene)
pathways <- clusterProfiler::compareCluster(geneCluster   = gene_lists,
fun = fun,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
.plot <- clusterProfiler::dotplot(pathways,
showCategory = 15,
title = paste(if(use_seq2gene)"seq2gene +",
gsub("^enrich","",fun),"pathway enrichment"))
if(show_plot)print(.plot)
return(list(pathways=pathways,
dotplot=.plot ) )
}
res_clusterProfiler <- enrich_clusterProfiler(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene = T,
show_plot = T)
res_clusterProfiler <- enrich_clusterProfiler(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene = F,
show_plot = T)
res_ReactomePA <- enrich_ReactomePA(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene = F)
pathways <- ReactomePA::enrichPathway(gene_lists,
pvalueCutoff=.pvalueCutoff,
pAdjustMethod=.pAdjustMethod)
pathways
extract_gene_lists <- function(annotatePeak_list,
use_seq2gene=F){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
gene_lists <- lapply(names(annotatePeak_list), function(x,
.use_seq2gene=use_seq2gene){
if(.use_seq2gene){
genes <- ChIPseeker::seq2gene(annotatePeak_list[[x]]@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
} else{ genes <- annotatePeak_list[[x]]@anno$geneId }
return(genes)
}) %>% `names<-`(names(annotatePeak_list))
return(gene_lists)
}
res_ReactomePA <- enrich_ReactomePA(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
use_seq2gene = T)
peaks_list <- list("CUT&TAG"=CT.narrowPeaks,
"ENCODE"=ENCODE.broadPeaks)
annotatePeak_list <- prepare_annotatePeak(peaks_list = peaks_list)
library(PeakyFinders)
library(EpiCompare)
# saveRDS(consensus_peaks_ct,"consensus_peaks.GSE199611.rds")
consensus_peaks_ct <- readRDS("consensus_peaks.GSE199611.rds")
peaks_tip <- readRDS("~/Downloads/peaks_tip_hg38.rds")
names(peaks_tip) <- paste("TIP-seq",names(peaks_tip),sep=".")
peaks_tip
peaks_grouped
peaks_grouped_tip <- EpiCompare::group_files(peakfiles = peaks_tip,
peaks_grouped_tip
peaks_grouped_tip
peaks_grouped_tip
searches = list(assay=c("H3k27me3","H3K27ac"))
peaks_grouped_tip <- EpiCompare::group_files(
peakfiles = peaks_tip,
searches = list(assay=c("H3k27me3","H3K27ac"))
)
list(assay=c("H3k27me3","H3K27ac")
list(assay=c("H3k27me3","H3K27ac"))
library(PeakyFinders)
library(EpiCompare)
peaks_tip <- readRDS("~/Downloads/peaks_tip_hg38.rds")
names(peaks_tip) <- paste("TIP-seq",names(peaks_tip),sep=".")
peaks_grouped_tip <- EpiCompare::group_files(
peakfiles = peaks_tip,
searches = list(assay=c("H3k27me3","H3K27ac"))
)
peaks_grouped_tip
peaks_grouped_tip[names(peaks_tip)]
consensus_peaks_tip <- EpiCompare::compute_consensus_peaks(
grlist = peaks_tip,
groups = peaks_grouped_tip[names(peaks_tip)],
genome_build = "hg38",
method = "consensusseeker",
nbrThreads = 10)
peaks_grouped_tip <- EpiCompare::group_files(
peakfiles = peaks_tip,
searches = list(assay=c("TIP-seq"),
histone=c("H3k27me3","H3K27ac"))
)
peaks_grouped_tip
consensus_peaks_tip <- EpiCompare::compute_consensus_peaks(
grlist = peaks_tip,
groups = peaks_grouped_tip[names(peaks_tip)],
genome_build = "hg38",
method = "consensusseeker",
nbrThreads = 10)
consensus_peaks_tip <- EpiCompare::compute_consensus_peaks(
grlist = peaks_tip,
groups = peaks_grouped_tip[names(peaks_tip)],
genome_build = "hg38",
method = "consensusseeker",
nbrThreads = 10)
peaks_tip <- readRDS("~/Downloads/peaks_tip_hg38.rds")
names(peaks_tip) <- paste("TIP-seq",names(peaks_tip),sep=".")
peaks_grouped_tip <- EpiCompare::group_files(
peakfiles = peaks_tip,
searches = list(assay=c("TIP-seq"),
histone=c("H3k27me3","H3K27ac"))
)
consensus_peaks_tip <- EpiCompare::compute_consensus_peaks(
grlist = peaks_tip,
groups = peaks_grouped_tip[names(peaks_tip)],
genome_build = "hg38",
method = "consensusseeker",
nbrThreads = 10)
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
consensus_peaks_tip <- EpiCompare::compute_consensus_peaks(
grlist = peaks_tip,
groups = peaks_grouped_tip[names(peaks_tip)],
genome_build = "hg38",
method = "consensusseeker",
nbrThreads = 10)
library(PeakyFinders)
library(EpiCompare)
peaks_tip <- readRDS("~/Downloads/peaks_tip_hg38.rds")
names(peaks_tip) <- paste("TIP-seq",names(peaks_tip),sep=".")
peaks_grouped_tip <- EpiCompare::group_files(
peakfiles = peaks_tip,
searches = list(assay=c("TIP-seq"),
histone=c("H3k27me3","H3K27ac"))
)
peaks_grouped_tip
peaks_grouped_tip[names(peaks_tip)]
consensus_peaks_tip <- EpiCompare::compute_consensus_peaks(
grlist = peaks_tip,
groups = peaks_grouped_tip[names(peaks_tip)],
genome_build = "hg38",
method = "consensusseeker",
nbrThreads = 10)
saveRDS(consensus_peaks_tip,"consensus_peaks_tip.rds")
peakfiles_all <- c(consensus_peaks_ct,consensus_peaks_tip)
# saveRDS(consensus_peaks_ct,"consensus_peaks.GSE199611.rds")
consensus_peaks_ct <- readRDS("consensus_peaks.GSE199611.rds")
peakfiles_all <- c(consensus_peaks_ct,consensus_peaks_tip)
length(v)
length(peakfiles_all)
peakfiles_all
names(consensus_peaks_ct) <- paste0("CUT&Tag",names(consensus_peaks_ct),sep="_")
consensus_peaks_ct
# saveRDS(consensus_peaks_ct,"consensus_peaks.GSE199611.rds")
consensus_peaks_ct <- readRDS("consensus_peaks.GSE199611.rds")
names(consensus_peaks_ct) <- paste("CUT&Tag",names(consensus_peaks_ct),sep="_")
names(consensus_peaks_ct)
saveRDS(consensus_peaks_ct,"consensus_peaks.GSE199611.rds")
peakfiles_all <- c(consensus_peaks_ct,consensus_peaks_tip)
names(peakfiles_all)
consensus_peaks_ct <- EpiCompare::liftover_grlist(grlist = consensus_peaks_ct,
input_build = "hg19",
output_build = "hg38")
consensus_peaks_ct
peakfiles_all <- c(consensus_peaks_ct,consensus_peaks_tip)
data("hg38_blacklist")
peakfiles_all <- c(consensus_peaks_ct,consensus_peaks_tip)
res <- EpiCompare::EpiCompare(peakfiles = peakfiles_all,
genome_build = list(peakfiles="hg38",
reference="hg38",
blacklist="hg38"),
blacklist = hg38_blacklist,
genome_build_output = "hg38",
reference = list(ENCODE_H3K27ac_ENCFF038DDS=reference$ENCODE$ENCFF038DDS,
ENCODE_H3K27me3_ENCFF049HUP=reference$ENCODE$ENCFF049HUP),
chromHMM_plot = TRUE,
chromHMM_annotation = "K562",
chipseeker_plot = TRUE,
enrichment_plot = TRUE,
tss_plot = TRUE,
stat_plot = TRUE,
upset_plot = TRUE,
precision_recall_plot = TRUE,
corr_plot = TRUE,
interact = TRUE,
save_output = TRUE,
output_dir = here::here("EpiCompare_CnT_CnR_TIP_consensus"))
marks <- c("H3K122","H3K27ac","H3K64ac","H3K27me3")
meta <- PeakyFinders::search_encode(target =  c("H3K122","H3K27ac",
"H3K64ac","H3K27me3"),
biosample_name = "K562",
organism = "Homo sapiens",
assembly = "GRCh38",
file_type = "narrowPeak",
output_type=c("replicated peaks"), # "^peaks$"
peaks_only = TRUE)
meta <- meta[grepl(paste(marks,collapse = "|"), target, ignore.case = TRUE),]
reference <- PeakyFinders::import_peaks(ids = meta$file_accession,  # "ENCSR000AKP"
builds = "GRCh38")
data("hg38_blacklist")
peakfiles_all <- c(consensus_peaks_ct,consensus_peaks_tip)
res <- EpiCompare::EpiCompare(peakfiles = peakfiles_all,
genome_build = list(peakfiles="hg38",
reference="hg38",
blacklist="hg38"),
blacklist = hg38_blacklist,
genome_build_output = "hg38",
reference = list(ENCODE_H3K27ac_ENCFF038DDS=reference$ENCODE$ENCFF038DDS,
ENCODE_H3K27me3_ENCFF049HUP=reference$ENCODE$ENCFF049HUP),
chromHMM_plot = TRUE,
chromHMM_annotation = "K562",
chipseeker_plot = TRUE,
enrichment_plot = TRUE,
tss_plot = TRUE,
stat_plot = TRUE,
upset_plot = TRUE,
precision_recall_plot = TRUE,
corr_plot = TRUE,
interact = TRUE,
save_output = TRUE,
output_dir = here::here("EpiCompare_CnT_CnR_TIP_consensus"))
length(peakfiles_all)
consensus_peaks_ct
res <- EpiCompare::EpiCompare(peakfiles = peakfiles_all,
genome_build = list(peakfiles="hg38",
reference="hg38",
blacklist="hg38"),
blacklist = hg38_blacklist,
genome_build_output = "hg38",
reference = list(ENCODE_H3K27ac_ENCFF038DDS=reference$ENCODE$ENCFF038DDS,
ENCODE_H3K27me3_ENCFF049HUP=reference$ENCODE$ENCFF049HUP),
chromHMM_plot = TRUE,
chromHMM_annotation = "K562",
chipseeker_plot = TRUE,
enrichment_plot = TRUE,
tss_plot = TRUE,
stat_plot = TRUE,
upset_plot = TRUE,
# precision_recall_plot = TRUE,
# corr_plot = TRUE,
interact = TRUE,
save_output = TRUE,
output_dir = here::here("EpiCompare_CnT_CnR_TIP_consensus"))
list.files("/Users/schilder/Desktop/CUT_n_TAG/EpiCompare_CnT_CnR_TIP_consensus/EpiCompare")
list.files("/Users/schilder/Desktop/CUT_n_TAG/EpiCompare_CnT_CnR_TIP_consensus/")
library(PeakyFinders)
library(EpiCompare)
marks <- c("H3K122","H3K27ac","H3K64ac","H3K27me3")
meta <- PeakyFinders::search_encode(target =  c("H3K122","H3K27ac",
"H3K64ac","H3K27me3"),
biosample_name = "K562",
organism = "Homo sapiens",
assembly = "GRCh38",
file_type = "narrowPeak",
output_type=c("replicated peaks"), # "^peaks$"
peaks_only = TRUE)
meta <- meta[grepl(paste(marks,collapse = "|"), target, ignore.case = TRUE),]
reference <- PeakyFinders::import_peaks(ids = meta$file_accession,  # "ENCSR000AKP"
builds = "GRCh38")
#### Import peak files from GEO ####
peaks_ct <- PeakyFinders::import_peaks(
ids = "GSE199611",
builds = "hg19",
searches = list(genericPeak=".bed.gz"))
# saveRDS(consensus_peaks_ct,"consensus_peaks.GSE199611.rds")
consensus_peaks_ct <- readRDS("consensus_peaks.GSE199611.rds")
consensus_peaks_ct <- EpiCompare::liftover_grlist(grlist = consensus_peaks_ct,
input_build = "hg19",
output_build = "hg38")
consensus_peaks_tip <- readRDS("consensus_peaks_tip.rds")
names(consensus_peaks_tip)
names(consensus_peaks_ct)
data("hg38_blacklist")
peakfiles_all <- c(consensus_peaks_ct,consensus_peaks_tip)
peakfiles_all <- peakfiles_all[sort[names(peakfiles_all)]]
peakfiles_all <- peakfiles_all[sort(names(peakfiles_all))]
names(peakfiles_all)
peakfiles_all
res <- EpiCompare::EpiCompare(peakfiles = peakfiles_all,
genome_build = list(peakfiles="hg38",
reference="hg38",
blacklist="hg38"),
blacklist = hg38_blacklist,
genome_build_output = "hg38",
reference = list(ENCODE_H3K27ac_ENCFF038DDS=reference$ENCODE$ENCFF038DDS,
ENCODE_H3K27me3_ENCFF049HUP=reference$ENCODE$ENCFF049HUP),
chromHMM_plot = TRUE,
chromHMM_annotation = "K562",
chipseeker_plot = TRUE,
enrichment_plot = TRUE,
tss_plot = TRUE,
stat_plot = TRUE,
upset_plot = TRUE,
# precision_recall_plot = TRUE,
# corr_plot = TRUE,
interact = TRUE,
save_output = TRUE,
output_dir = here::here("EpiCompare_CnT_TIP_consensus"))
res
browseURL("/Users/schilder/Desktop/CUT_n_TAG/EpiCompare_CnT_TIP_consensus/ENCODE_H3K27ac_ENCFF038DDS/EpiCompare.html")
browseURL("/Users/schilder/Desktop/CUT_n_TAG/EpiCompare_CnT_TIP_consensus/ENCODE_H3K27me3_ENCFF049HUP/EpiCompare.html")
peakfiles_ac <- peakfiles_all[grepl("H3K27ac",names(peakfiles_all), ignore.case = TRUE)]
pr_ac <- EpiCompare::plot_precision_recall(
peakfiles = peakfiles_ac,
reference =
list(ENCODE_H3K27ac_ENCFF038DDS=reference$ENCODE$ENCFF038DDS),
subtitle = "H3K27ac"
)
?EpiCompare::precision_recall()
citation()
?EpiCompare::compute_consensus_peaks
library(PeakyFinders)
library(EpiCompare)
peaks_native <- rtracklayer::import("/Volumes/bms20/projects/neurogenomics-lab/live/Projects/CUT_n_TAG/native_ChIP/K562_H3K27ac_native_ChIP_SRR3144862.srt.nodup_x_K562_input_native_ChIP_SRR3144864.srt.nodup.pval0.01.500K.bfilt.narrowPeak.gz", format="narrowPeak")
peaks_native
peaks_native <- list("GSM2054696_K562_H3K27ac"=peaks_native)
peaks_native <- EpiCompare::liftover_grlist(grlist = peaks_native,
input_build = "hg19",
output_build = "hg38")
peaks_native$GSM2054696_K562_H3K27ac
peaks_native <- rtracklayer::import("/Volumes/bms20/projects/neurogenomics-lab/live/Projects/CUT_n_TAG/native_ChIP/K562_H3K27ac_native_ChIP_SRR3144862.srt.nodup_x_K562_input_native_ChIP_SRR3144864.srt.nodup.pval0.01.500K.bfilt.narrowPeak.gz",
format="narrowPeak")
peaks_native <- list("GSM2054696_K562_H3K27ac"=peaks_native)
marks <- c("H3K122","H3K27ac","H3K64ac","H3K27me3")
meta <- PeakyFinders::search_encode(target =  c("H3K122","H3K27ac",
"H3K64ac","H3K27me3"),
biosample_name = "K562",
organism = "Homo sapiens",
assembly = "GRCh38",
file_type = "narrowPeak",
output_type=c("replicated peaks"), # "^peaks$"
peaks_only = TRUE)
meta <- meta[grepl(paste(marks,collapse = "|"), target, ignore.case = TRUE),]
reference <- PeakyFinders::import_peaks(ids = meta$file_accession,  # "ENCSR000AKP"
builds = "GRCh38")
data("hg38_blacklist")
res <- EpiCompare::EpiCompare(peakfiles = peaks_native,
genome_build = list(peakfiles="hg19",
reference="hg38",
blacklist="hg38"),
blacklist = hg38_blacklist,
genome_build_output = "hg38",
reference = list(ENCODE_H3K27ac_ENCFF038DDS=reference$ENCODE$ENCFF038DDS),
chromHMM_plot = TRUE,
chromHMM_annotation = "K562",
chipseeker_plot = TRUE,
enrichment_plot = TRUE,
tss_plot = TRUE,
stat_plot = TRUE,
upset_plot = TRUE,
precision_recall_plot = TRUE,
corr_plot = TRUE,
interact = TRUE,
save_output = TRUE,
output_dir = here::here("EpiCompare_nativeCHiPseq"))
res
browseURL("res")
browseURL(res)
