# Construct gene list
genes1 <- as.data.frame(x)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- dotplot(pathway1)
print(dotplot1)
# Enrich pathway after seq2gene
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
genes2 <- ChIPseeker::seq2gene(x,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2)
dotplot1 <- dotplot(pathway2)
print(dotplot2)
return(list(pathway1=pathway1,
pathway2=pathway2,
dotplot1=dotplot1,
dotplot2=dotplot2
)
)
}) %>% names(annotatePeak_list)
annotatePeak_list
x=names(annotatePeak_list)[[1]]
x
print(x)
peakAnnot <- annotatePeak_list[[x]]
# Construct gene list
genes1 <- as.data.frame(peakAnnot)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- dotplot(pathway1)
print(dotplot1)
# Enrich pathway after seq2gene
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
genes2 <- ChIPseeker::seq2gene(peakAnnot,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
peakAnnot@anno
genes2 <- ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
genes2
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2)
dotplot1 <- dotplot(pathway2)
print(dotplot2)
dotplot2 <- dotplot(pathway2)
print(dotplot2)
?dotplot
enrich_ReactomePA <- function(annotatePeak_list){
res <- lapply(names(annotatePeak_list), function(x){
print(x)
peakAnnot <- annotatePeak_list[[x]]
# Construct gene list
genes1 <- as.data.frame(peakAnnot)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- ReactomePA::dotplot(pathway1)
print(dotplot1)
# Enrich pathway after seq2gene
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
genes2 <- ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2)
dotplot2 <- ReactomePA::dotplot(pathway2)
print(dotplot2)
return(list(pathways=pathway1,
pathways_seq2gene=pathway2,
dotplot=dotplot1,
dotplot_seq2gene=dotplot2 ) )
}) %>% names(annotatePeak_list)
return(res)
}
enrich_clusterProfiler <- function(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH"){
genes = lapply(annotatePeak_list, function(i) as.data.frame(i)$geneId)
names(genes) = sub("_", "\n", names(genes))
res <- clusterProfiler::compareCluster(geneCluster   = genes,
fun = fun,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
pathways <- clusterProfiler::dotplot(res,
showCategory = 15,
title = paste(gsub("^enrich","",fun),"pathway enrichment analysis"))
return(list(pathways=pathways,
dotplot=.plot ) )
}
res <- enrich_clusterProfiler(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH")
enrich_clusterProfiler <- function(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH"){
genes = lapply(annotatePeak_list, function(i) as.data.frame(i)$geneId)
names(genes) = sub("_", "\n", names(genes))
pathways <- clusterProfiler::compareCluster(geneCluster   = genes,
fun = fun,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
.plot <- clusterProfiler::dotplot(pathways,
showCategory = 15,
title = paste(gsub("^enrich","",fun),"pathway enrichment analysis"))
return(list(pathways=pathways,
dotplot=.plot ) )
}
res <- enrich_clusterProfiler(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH")
enrich_clusterProfiler <- function(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
show_plot=T){
genes = lapply(annotatePeak_list, function(i) as.data.frame(i)$geneId)
names(genes) = sub("_", "\n", names(genes))
pathways <- clusterProfiler::compareCluster(geneCluster   = genes,
fun = fun,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
.plot <- clusterProfiler::dotplot(pathways,
showCategory = 15,
title = paste(gsub("^enrich","",fun),"pathway enrichment analysis"))
if(show_plot)print(.plot)
return(list(pathways=pathways,
dotplot=.plot ) )
}
res <- enrich_clusterProfiler(annotatePeak_list,
fun="enrichKEGG",
pvalueCutoff  = 0.05,
pAdjustMethod = "BH")
enrich_ReactomePA <- function(annotatePeak_list){
res <- lapply(names(annotatePeak_list), function(x){
print(x)
peakAnnot <- annotatePeak_list[[x]]
# Construct gene list
genes1 <- as.data.frame(peakAnnot)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- ReactomePA::dotplot(pathway1)
print(dotplot1)
# Enrich pathway after seq2gene
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
genes2 <- ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2)
dotplot2 <- ReactomePA::dotplot(pathway2)
print(dotplot2)
return(list(pathways=pathway1,
pathways_seq2gene=pathway2,
dotplot=dotplot1,
dotplot_seq2gene=dotplot2 ) )
}) %>% names(annotatePeak_list)
return(res)
}
enrich_ReactomePA <- function(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
show_plot=T){
res <- lapply(names(annotatePeak_list), function(x){
print(x)
peakAnnot <- annotatePeak_list[[x]]
# Construct gene list
genes1 <- as.data.frame(peakAnnot)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- ReactomePA::dotplot(pathway1)
if(show_plot) print(dotplot1)
# Enrich pathway after seq2gene
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
genes2 <- ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
dotplot2 <- ReactomePA::dotplot(pathway2)
if(show_plot) print(dotplot2)
return(list(pathways=pathway1,
pathways_seq2gene=pathway2,
dotplot=dotplot1,
dotplot_seq2gene=dotplot2 ) )
}) %>% names(annotatePeak_list)
return(res)
}
res_ReactomePA <- enrich_ReactomePA(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH")
enrich_ReactomePA <- function(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
show_plot=T){
res <- lapply(names(annotatePeak_list), function(x){
print(x)
peakAnnot <- annotatePeak_list[[x]]
# Construct gene list
genes1 <- as.data.frame(peakAnnot)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- ReactomePA::dotplot(pathway1)
if(show_plot) print(dotplot1)
# Enrich pathway after seq2gene
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
genes2 <- ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
dotplot2 <- ReactomePA::dotplot(pathway2)
if(show_plot) print(dotplot2)
return(list(pathways=pathway1,
pathways_seq2gene=pathway2,
dotplot=dotplot1,
dotplot_seq2gene=dotplot2 ) )
}) %>% `names<-`(annotatePeak_list)
return(res)
}
res_ReactomePA <- enrich_ReactomePA(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH")
enrich_ReactomePA <- function(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
show_plot=T){
res <- lapply(names(annotatePeak_list), function(x){
print(x)
peakAnnot <- annotatePeak_list[[x]]
# Construct gene list
genes1 <- as.data.frame(peakAnnot)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- ReactomePA::dotplot(pathway1,
title=paste(x,":\nReactomePA pathway enrichment"))
if(show_plot) print(dotplot1)
# Enrich pathway after seq2gene
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
genes2 <- ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
dotplot2 <- ReactomePA::dotplot(pathway2,
title=paste(x,":\nseq2gene + ReactomePA pathway enrichment"))
if(show_plot) print(dotplot2)
return(list(pathways=pathway1,
pathways_seq2gene=pathway2,
dotplot=dotplot1,
dotplot_seq2gene=dotplot2 ) )
}) %>% `names<-`(annotatePeak_list)
return(res)
}
res_ReactomePA <- enrich_ReactomePA(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH")
genes.seq2gene <- lapply(peaks_list, function(x){
ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
}) %>% `names<-`(peaks_list)
genes.seq2gene
names(genes.seq2gene)
222
length(genes.seq2gene)
genes.seq2gene <- lapply(names(peaks_list), function(x){
print(x)
gr <- peaks_list[[x]]
genes <- ChIPseeker::seq2gene(gr,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
return(genes)
}) %>% `names<-`(peaks_list)
genes.seq2gene <- lapply(names(peaks_list), function(x){
print(x)
gr.dat <- peaks_list[[x]]
suppressWarnings(GenomeInfoDb::seqlevelsStyle(gr.dat) <- "UCSC")
genes <- ChIPseeker::seq2gene(gr.dat,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
return(genes)
}) %>% `names<-`(peaks_list)
genes.seq2gene <- lapply(names(peaks_list), function(x){
print(x)
gr.dat <- peaks_list[[x]]
suppressWarnings(GenomeInfoDb::seqlevelsStyle(gr.dat) <- "UCSC")
genes <- ChIPseeker::seq2gene(gr.dat,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
return(genes)
}) %>% `names<-`(names(peaks_list))
enrich_ReactomePA <- function(annotatePeak_list,
pvalueCutoff  = 0.05,
pAdjustMethod = "BH",
show_plot=T){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
res <- lapply(names(annotatePeak_list), function(x){
print(x)
peakAnnot <- annotatePeak_list[[x]]
# Construct gene list
genes1 <- as.data.frame(peakAnnot)$geneId
names(genes1) = sub("_", "\n", names(genes1))
# Enrich pathway
pathway1 <- ReactomePA::enrichPathway(genes1)
dotplot1 <- ReactomePA::dotplot(pathway1,
title=paste(x,":\nReactomePA pathway enrichment"))
if(show_plot) print(dotplot1)
# Enrich pathway after seq2gene
genes2 <- ChIPseeker::seq2gene(peakAnnot@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
# Enrich pathway
pathway2 <- ReactomePA::enrichPathway(genes2,
pvalueCutoff  = pvalueCutoff,
pAdjustMethod = pAdjustMethod)
dotplot2 <- ReactomePA::dotplot(pathway2,
title=paste(x,":\nseq2gene + ReactomePA pathway enrichment"))
if(show_plot) print(dotplot2)
return(list(pathways=pathway1,
pathways_seq2gene=pathway2,
dotplot=dotplot1,
dotplot_seq2gene=dotplot2 ) )
}) %>% `names<-`(names(annotatePeak_list))
return(res)
}
names(genes.seq2gene)
peakAnnot
# root.dir <- "/rds/general/project/neurogenomics-lab/live/GitRepos/CUT_n_TAG"
# root.dir <- "/Volumes/RDS/project/neurogenomics-lab/live/GitRepos/CUT_n_TAG"
root.dir <- "/Volumes/bms20/projects/neurogenomics-lab/live/GitRepos/CUT_n_TAG"
source("functions.R")
try({setwd(root.dir)})
knitr::opts_chunk$set(echo = T, root.dir = root.dir)
knitr::opts_knit$set(root.dir = root.dir)
library(dplyr)
# library(echolocatoR) # devtools::install_github("RajLabMSSM/echolocatoR")
library(rtracklayer) # BiocManager::install("rtracklayer")
library(ggbio) # BiocManager::install("ggbio")
library(rGADEM) # BiocManager::install("rGADEM")
library(BSgenome.Hsapiens.UCSC.hg19) #BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
library(ChIPseeker) #BiocManager::install("ChIPseeker")
library(ggupset) # install.packages("ggupset")
library(ggimage) # install.packages("ggimage")
library(clusterProfiler)
library(ReactomePA)  # BiocManager::install("ReactomePA")
library(rGADEM)
library(BSgenome.Hsapiens.UCSC.hg19)
library(GenomicRanges)
# IMPORTANT! Otherwise can have issues with rtracklayer::import()
# base::closeAllConnections()
ENCODE.broadPeaks <- rtracklayer::import("http://hgdownload.soe.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeBroadHistone/wgEncodeBroadHistoneK562H3k27acStdPk.broadPeak.gz")
CT.dir <- file.path(root.dir,"processed_data/HK5M2BBXY_merged")
CT.peaks_dir <- file.path(CT.dir,"bwa/mergedLibrary/macs/narrowPeak")
CT.bwa_dir <- file.path(CT.dir,"bwa/mergedLibrary/bigwig")
CT.bigwig_dir <- file.path(CT.dir,"bwa/mergedLibrary/bigwig")
CT.summits <- rtracklayer::import(file.path(CT.peaks_dir,
"control_R1.mLb.clN_summits.bed"))
CT.summits$width <- GenomicRanges::width(CT.summits)
summary(CT.summits$width)
# Narrow peaks
CT.annotatePeaks <-  data.table::fread(file.path(CT.peaks_dir,"control_R1.mLb.clN_peaks.annotatePeaks.txt")) %>%
dplyr::mutate(peak_score=`Peak Score`) %>%
GenomicRanges::makeGRangesFromDataFrame(seqnames.field = "Chr",
start.field = "Start", end.field = "End",strand.field = "Strand",
keep.extra.columns = T)
CT.annotatePeaks$width <- GenomicRanges::width(CT.annotatePeaks)
summary(CT.annotatePeaks$width)
CT.narrowPeaks <- rtracklayer::import.bed(file.path(CT.peaks_dir,
"control_R1.mLb.clN_peaks.narrowPeak"))
CT.narrowPeaks$width <- GenomicRanges::width(CT.narrowPeaks)
summary(CT.narrowPeaks$width)
ChIPseeker::covplot(peak = CT.narrowPeaks,
weightCol = "score",#"qValue",
title = "CUT&TAG peaks")
suppressWarnings(GenomeInfoDb::seqlevelsStyle(CT.narrowPeaks) <- "UCSC")
peaks_list <- list(CT=CT.narrowPeaks,
ENCODE=ENCODE.broadPeaks)
tagMatrix_list <- prepare_tagMatrix(peaks_list=peaks_list)
tagMatrix_list <- prepare_tagMatrix(peaks_list=peaks_list)
annotatePeak_list <- prepare_annotatePeak(peaks_list = peaks_list)
annotatePeak_list <- prepare_annotatePeak(peaks_list = peaks_list)
names(peaks_list)
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
prepare_annotatePeak <- function(peaks_list,
nThread=parallel::detectCores()-1){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
parallel::mclapply(names(peaks_list), function(x){
message_parallel(x)
gr <- peaks_list[[x]]
suppressWarnings(GenomeInfoDb::seqlevelsStyle(gr) <- "UCSC")
peakAnno <- ChIPseeker::annotatePeak(peak = gr,
tssRegion=c(-3000, 3000),
TxDb=TxDb,
annoDb="org.Hs.eg.db")
return(peakAnno)
}, mc.cores = nThread) %>% `names<-`(names(peaks_list))
}
annotatePeak_list <- prepare_annotatePeak(peaks_list = peaks_list)
compare_peak_overlap(gr.query = CT.narrowPeaks,
gr.subject = ENCODE.broadPeaks)
annotatePeak_list[[1]]@anno
gene_vennplot <- function(annotatePeak_list,
use_seq2gene=F,
show_plot=T){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
gene_lists <- lapply(names(annotatePeak_list), function(x,
.use_seq2gene=use_seq2gene){
print(x)
if(.use_seq2gene){
genes <- ChIPseeker::seq2gene(annotatePeak_list[[x]]@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
} else{ genes <- annotatePeak_list[[x]]$geneId }
return(genes)
}) %>% `names<-`(names(peaks_list))
# Plot
vp <- vennplot(gene_lists)
if(show_plot)print(vp)
# Return
return(list(gene_lists=gene_lists,
vennplot=vp))
}
annotatePeak_list[[x]]$geneId
annotatePeak_list[[1]]$geneId
gene_vennplot <- function(annotatePeak_list,
use_seq2gene=F,
show_plot=T){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
gene_lists <- lapply(names(annotatePeak_list), function(x,
.use_seq2gene=use_seq2gene){
print(x)
if(.use_seq2gene){
genes <- ChIPseeker::seq2gene(annotatePeak_list[[x]]@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
} else{ genes <- annotatePeak_list[[x]]anno$geneId }
gene_vennplot <- function(annotatePeak_list,
use_seq2gene=F,
show_plot=T){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
gene_lists <- lapply(names(annotatePeak_list), function(x,
.use_seq2gene=use_seq2gene){
print(x)
if(.use_seq2gene){
genes <- ChIPseeker::seq2gene(annotatePeak_list[[x]]@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
} else{ genes <- annotatePeak_list[[x]]anno$geneId }
gene_vennplot <- function(annotatePeak_list,
use_seq2gene=F,
show_plot=T){
TxDb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
gene_lists <- lapply(names(annotatePeak_list), function(x,
.use_seq2gene=use_seq2gene){
print(x)
if(.use_seq2gene){
genes <- ChIPseeker::seq2gene(annotatePeak_list[[x]]@anno,
tssRegion = c(-1000, 1000),
flankDistance = 3000,
TxDb=TxDb)
} else{ genes <- annotatePeak_list[[x]]@anno$geneId }
return(genes)
}) %>% `names<-`(names(peaks_list))
# Plot
vp <- vennplot(gene_lists)
if(show_plot)print(vp)
# Return
return(list(gene_lists=gene_lists,
vennplot=vp))
}
vp_res <- gene_vennplot(annotatePeak_list = annotatePeak_list,
use_seq2gene = F)
vp_res.seq2gene <- gene_vennplot(annotatePeak_list = annotatePeak_list,
use_seq2gene = T)
vp_res <- gene_vennplot(annotatePeak_list = annotatePeak_list,
use_seq2gene = F)
?vennplot
